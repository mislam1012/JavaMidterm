***ANSWER ALL QUESTIONS BELOW***

What is a programming language?
Answer: A programming language is a computer language programmers use to develop software programs, scripts, or other sets of instructions for computers to execute

What is a JDK composed of? Define each components?
Answer: JDK Components
Let’s have a look at some of the most used JDK Components listed below:

JRE: Java Runtime Environment
java: It’s simply a loader that works for all the java applications. Also, this particular tool interprets the class file generated by javac. The single java launcher is used for the purpose of development and deployment. Gone are the days when JRE was used as the deployment launcher. Nowadays, JRE doesn’t exist with the Sun JDK and totally replaced by this new java loader.
javac: It’s a compiler. And, basically, it converts source code into Java bytecode
appletviewer: Through this component, we can run the Java applets without taking the help of a web browser and even debug them.
apt: This is used as an annotation-processing tool
extcheck: For identifying the conflicts, this next check is used
idlj: An IDL-to-Java compiler used to generate Java bindings from the provided Java IDL file
jabswitch: It is a Java Access Bridge
javadoc: It is a documentation generator, which produces documentation from source code comments, automatically
jar: It is an archiver. Along with related class libraries packages into one JAR file. Also, it manages those files
javafxpackager: It is a tool to attain packages and sign JavaFX applications
jarsigner: It’s a verification and jar signing tool
javah: It’s a stub generator and ‘C’ header that is used for writing built-in methods
javap: It’s a class file disassembler
javaws: It’s a Java Web Start launcher for JNLP applications
JConsole: It’s a Console used for Java Monitoring and Management
jdb: It’s a debugger
jhat: It’s a Java Heap Analysis Tool (experimental)
jinfo: It particularly used to get the configuration information from a running Java process
jmap: It’s an Oracle jmap which is also a Memory Map. This gives the result of the memory map for Java. On the other hand, it is useful in printing heap memory, or shared object memory maps details of a particular core dump or process.
jmc: It’s known as a Java Mission Control
jps: it’s a JVM Process, Status Tool. It is capable of listing the instrumented HotSpot JVMs on the target system
jrunscript: It’s a Java command-line script shell
jstack: A tool prints Java stack traces of Java threads
jstat: Java Virtual Machine statistic monitoring tool
keytool: A tool for manipulating the Keystore
pack200: JAR compression tool
Policytool: Utility that determines the Java runtime. That means it is a policy creation and management tool.
VisualVM: It’s a visual tool. It is integrated with numerous command-line JDK tools.
wsimport: It produces portable JAX-WS artifacts with an aim to invoke a web service
xjc: It’s the part of the Java API boosting the XML Binding (JAXB) API. After accepting the XML schema, it generates Java classes

What is an IDE?
Answer:  An integrated development environment (IDE) is software for building applications that combines common developer tools into a single GUI.

What are some of the most popular Java IDEs available in the market?
Answer: most popular Java IDEs
Eclipse. Eclipse is one of the most popular Java IDEs on the market. ...
NetBeans. Apache NetBeans is the official IDE for Java 8, making it a top Java IDE for creating desktop, mobile, and web applications. ...
IntelliJ IDEA. ...
BlueJ. ...
Oracle JDeveloper. ...
MyEclipse. ...
Greenfoot. ...
jGRASP.

Explain the entire java life cycle.
Answer: Life cycle of a java program tells us what happens right from the point when we type source code in a text editor to the point that source code is converted into machine code (0’s and 1’s).

There are three main stages in the life cycle of a java program. They are:

Editing the program
Compiling the source code
Executing the byte code
First, you will start with typing the program in a text-editor (ex: notepad, notepad++, wordpad, textedit etc). After completing editing of the program, we have to save the file. While saving the file you should remember that the file must be saved with .java extension. For example, let’s think that I had written a Java program which contains a single class Sample (more on classes in future posts). It is a good convention to save the file with the name of the class. So, as per my example, the file will be saved as Sample.java.
Second step is compilation. The name of the Java compiler is javac. The input to the compiler is Java source code which is available in Sample.java. The output of the compiler is machine independent or platform independent code which is known as bytecode. The file which is generated after compilation is .class file. As per my example, the bytecode file will be Sample.class.
Last step is execution. The bytecode generated by the compiler will be executed by Java Virtual Machine (JVM). Input to the JVM is bytecode and output is machine code (0’s and 1’s) which will be executed by the CPU of the local machine.

What is a class?
Answer: class: a class describes the contents of the objects that belong to it: it describes an aggregate of data fields (called instance variables), and defines the operations (called methods). 

What is an object?
Answer: object: an object is an element (or instance) of a class; objects have the behaviors of their class.

What is the entry point of an application?
Answer: An application entry point identifies a resource that is an access point to an application. Application entry points are used to control users' access to different versions of an application that is deployed on a platform.

Why is the main() static?
Answer: Java main() method is always static, so that compiler can call it without the creation of an object or before the creation of an object of the class. ... So, the compiler needs to call the main() method. If the main() is allowed to be non-static, then while calling the main() method JVM has to instantiate its class

Which class is the superclass of all classes?
Answer: Object class
Object class is the root or superclass of the class hierarchy, which is present in java. lang package. All predefined classes and user-defined classes are the subclasses from Object class.

What is difference between path and classpath variables?
Answer: PATH is the environment variable where we specify the locations of binaries. Example: We add bin directory path of JDK or JRE, so that any binaries under the directory can be accessed directly without specifying absolute path. CLASSPATH is the path for Java application where the classes you compiled will be available.

What is the difference between an Interface and Abstract class?
Answer: An abstract class allows you to create functionality that subclasses can implement or override. An interface only allows you to define functionality, not implement it. And whereas a class can extend only one abstract class, it can take advantage of multiple interfaces.

Can you make an Object from an Interface and Abstract class? If yes or no, how would you do it?
Answer: You cannot create an object of abstract class or interface since they are incomplete class (interface is not even considered as a class.) What you can do is to implement a subclass of abstract class which, of course, must not be abstract.

What is Access Modifier?
Answer: The access modifiers in Java specifies the accessibility or scope of a field, method, constructor, or class. We can change the access level of fields, constructors, methods, and class by applying the access modifier on it.

What is OOP? Define each OOP concept.
Answer:Object-oriented programming is a method used for designing a program using classes and objects. Object-oriented programming is also called the core of java. Object-oriented programming organizes a program around objects and well-defined interfaces. This can also be characterized as data controlling for accessing the code. In this type of approach, programmers define the data type of a data structure and the operations that are applied to the data structure. This implies software development and maintenance by using some of the concepts:

Abstraction. Abstraction means using simple things to represent complexity. We all know how to turn the TV on, but we don’t need to know how it works in order to enjoy it. In Java, abstraction means simple things like objects, classes, and variables represent more complex underlying code and data. This is important because it lets avoid repeating the same work multiple times.
Encapsulation. This is the practice of keeping fields within a class private, then providing access to them via public methods. It’s a protective barrier that keeps the data and code safe within the class itself. This way, we can re-use objects like code components or variables without allowing open access to the data system-wide.
Inheritance. This is a special feature of Object Oriented Programming in Java. It lets programmers create new classes that share some of the attributes of existing classes. This lets us build on previous work without reinventing the wheel.
Polymorphism. This Java OOP concept lets programmers use the same word to mean different things in different contexts. One form of polymorphism in Java is method overloading. That’s when different meanings are implied by the code itself. The other form is method overriding. That’s when the different meanings are implied by the values of the supplied variables. See more on this below.

What is Java Package and which package is imported by default?
Answer: A java package is a group of similar types of classes, interfaces and sub-packages. Package in java can be categorized in two form, built-in package and user-defined package. There are many built-in packages such as java, lang, awt, javax, swing, net, io, util, sql etc.The package keyword is used to create a package in java. Java compiler imports java. lang package internally by default. It provides the fundamental classes that are necessary to design a basic Java program. The important classes are Object, which is the root of the class hierarchy, and Class, instances of which represent classes at run time.

What is an API? List some API's that you have used so far.
Answer:API is the acronym for Application Programming Interface, which is a software intermediary that allows two applications to talk to each other. Weather Snippets. Google utilizes APIs to display relevant data from user search queries. ...
Log-in Using google. google auth api
Pay with PayPal. ...
Twitter Bots. ...
Travel Booking.

Does java support multiple inheritance? Why or why not?
Answer: 
One reason why the Java programming language does not permit you to extend more than one class is to avoid the issues of multiple inheritance of state, which is the ability to inherit fields from multiple classes. For example, suppose that you are able to define a new class that extends multiple classes.

What is method overloading and when does it happen?
Answer: Overloading occurs when two or more methods in one class have the same method name but different parameters. Must have at least two methods by the same name in the class. Must have a different number of parameters. If the number of parameters is the same, then it must have different types of parameters.

Explain exceptions in java and how to handle them.
Answer: The try-catch is the simplest method of handling exceptions. Put the code you want to run in the try block, and any Java exceptions that the code throws are caught by one or more catch blocks. This method will catch any type of Java exceptions that get thrown. This is the simplest mechanism for handling exceptions.

What is static keyword? When and how do we use it?
Answer: The static keyword in Java is used for memory management mainly. We can apply static keyword with variables, methods, blocks and nested classes.

What is final keyword? When and how do we use it?
Answer: In Java, the final keyword can be used while declaring an entity. Using the final keyword means that the value can't be modified in the future. This entity can be - but is not limited to - a variable, a class or a method.

Explain the difference between final, finally and finalize?
Answer: The basic difference between final, finally and finalize is that the final is an access modifier, finally is the block in Exception Handling and finalize is the method of object class. ... finalize is the method in Java which is used to perform clean up processing just before object is garbage collected.

What is a constructor?
Answer: A constructor in Java is a block of code similar to a method that's called when an instance of an object is created. ... The name of the constructor must be the same as the name of the class. Unlike methods, constructors are not considered members of a class.

Can we have multiple constructors in a class?
Answer:The technique of having two (or more) constructors in a class is known as constructor overloading. A class can have multiple constructors that differ in the number and/or type of their parameters. It's not, however, possible to have two constructors with the exact same parameters.

If we don't have a constructor declared, what is called during the object creation?
Answer:All classes have at least one constructor. If a class does not explicitly declare any, the Java compiler automatically provides a no-argument constructor, called the default constructor. ... If the parent has no constructor ( Object does have one), the compiler will reject the program.

What is "this" keyword in Java? When would we use it?
Answer:The this keyword refers to the current object in a method or constructor. The most common use of the this keyword is to eliminate the confusion between class attributes and parameters with the same name (because a class attribute is shadowed by a method or constructor parameter). ... Return the current class object

What is "super" keyword in Java? What are some scenarios we would use it?
Answer: super keyword is used to access methods of the parent class while this is used to access methods of the current class. this is a reserved keyword in java i.e, we can't use it as an identifier. this is used to refer current-class's instance as well as static members.

What does JVM stand for?
Answer: A Java virtual machine (JVM) is a virtual machine that enables a computer to run Java programs as well as programs written in other languages that are also compiled to Java bytecode

Is JVM platform independent?
Answer: Every system has its own JVM which gets installed automatically when the jdk software is installed. ... An important point to be noted is that while JAVA is platform-independent language, the JVM is platform-dependent. Different JVM is designed for different OS and byte code is able to run on different OS.

What version of Java are you using?
Answer: I am using java 8, The Java version can be found in the Java Control Panel. Under the General tab in the Java Control Panel, the version is available through the About section. A dialog appears (after clicking About) showing the Java version.

What does JAR stand for?
Answer:JAR stands for Java ARchive. It's a file format based on the popular ZIP file format and is used for aggregating many files into one. Although JAR can be used as a general archiving tool, the primary motivation for its development was so that Java applets and their requisite components

What is the difference between JDK and JVM?
Answer: JDK is a software development kit whereas JRE is a software bundle that allows Java program to run, whereas JVM is an environment for executing bytecode. ... JDK is platform dependent, JRE is also platform dependent, but JVM is platform independent. JDK contains tools for developing, debugging, etc.

What is the difference between JVM and JRE?
Answer:The JVM is the process that runs the Java code, and the JRE are all files distributed to form the "environment" in which the JVM runs. JRE is an environment, in order to execute any Java program locally.

Explain the difference between compile-time and run-time?
Answer:Compile-time and Runtime are the two programming terms used in the software development. Compile-time is the time at which the source code is converted into an executable code while the run time is the time at which the executable code is started running.

What is heap?
Answer: The Java heap is the area of memory used to store objects instantiated by applications running on the JVM. Objects in the heap can be shared between threads. Many users restrict the Java heap size to 2-8 GB in order to minimize garbage collection pauses.

How does Java manage its memory?
Answer:In Java, memory management is the process of allocation and de-allocation of objects, called Memory management. Java does memory management automatically. Java uses an automatic memory management system called a garbage collector.

What is the difference between String, StringBuffer and StringBuilder?
Answer:Objects of String are immutable, and objects of StringBuffer and StringBuilder are mutable. StringBuffer and StringBuilder are similar, but StringBuilder is faster and preferred over StringBuffer for the single-threaded program. If thread safety is needed, then StringBuffer is used.

What is Singleton class?
Answer:In object-oriented programming, a singleton class is a class that can have only one object (an instance of the class) at a time.

What is Serialization and Deserialization?
Answer:Serialization is a mechanism of converting the state of an object into a byte stream. Deserialization is the reverse process where the byte stream is used to recreate the actual Java object in memory. This mechanism is used to persist the object.

Explain the difference between While and Do..While loops?
Answer:While the loop is an entry control loop because firstly, the condition is checked, then the loop's body is executed. The do-while loop is an exit control loop because in this, first of all, the body of the loop is executed then the condition is checked true or false.

What is Enum?
Answer: An enum is a special "class" that represents a group of constants (unchangeable variables, like final variables). To create an enum , use the enum

What is Iterator?
Answer:Iterator in Java. In Java, an Iterator is one of the Java cursors. Java Iterator is an interface that is practiced in order to iterate over a collection of Java object components entirety one by one. ... The Java Iterator also helps in the operations like READ and REMOVE.

Which one will take more memory: an int or Integer? Why?
Answer: Integer, it is an object which takes 128 bits (16 bytes) to store int value. When we creates new Integer using new Operator it allocates memory as per follows. Flags (32 bits)- It is collection of flags that describes the state of object. Like is it has hash-code, is it array or not i.e. its Shape.

Why are Strings considered to be immutable in Java?
Answer: The String is immutable in Java because of the security, synchronization and concurrency, caching, and class loading. The reason of making string final is to destroy the immutability and to not allow others to extend it. The String objects are cached in the String pool, and it makes the String immutable.

What is constructor chaining in Java?
Answer: Constructor chaining is the process of calling one constructor from another constructor with respect to current object. ... Within same class: It can be done using this() keyword for constructors in same class. From base class: by using super() keyword to call constructor from the base class.

The difference between Serial and Parallel Garbage Collector?
Answer: The only difference between serial and parallel garbage collector is that serial garbage collector uses a single thread for garbage collection process while the parallel garbage collector uses multiple threads for the garbage collection. Parallel GC can use multiple CPUs to speed up the application throughput.

What does JIT stands for?
Answer: The just-in-time (JIT) inventory system is a management strategy that aligns raw-material orders from suppliers directly with production schedules.

Explain the process of Java garbage collection?
Answer: Java garbage collection is the process by which Java programs perform automatic memory management. Java programs compile to bytecode that can be run on a Java Virtual Machine, or JVM for short. When Java programs run on the JVM, objects are created on the heap, which is a portion of memory dedicated to the program.

Can you guarantee the garbage collection process?
Answer: No, we can not guarantee objects destruction even though it is unreferenced, because we can not guarantee garbage collector execution.

What is the difference between stack and heap in Java?
Answer:The major difference between Stack memory and heap memory is that the stack is used to store the order of method execution and local variables while the heap memory stores the objects and it uses dynamic memory allocation and deallocation.

What is reflection in Java and why is it useful?
Answer:Reflection is a feature in the Java programming language. It allows an executing Java program to examine or "introspect" upon itself, and manipulate internal properties of the program. For example, it's possible for a Java class to obtain the names of all its members and display them.

What is multithreading in Java?
Answer:In Java, Multithreading refers to a process of executing two or more threads simultaneously for maximum utilization of the CPU. A thread in Java is a lightweight process requiring fewer resources to create and shares the process resources.

What is synchronization in Java?
Answer:Synchronization in java is the capability to control the access of multiple threads to any shared resource. In the Multithreading concept, multiple threads try to access the shared resources at a time to produce inconsistent results. The synchronization is necessary for reliable communication between threads.

What is a Framework?
Answer:A framework, or software framework, is a platform for developing software applications. ... For example, a framework may include predefined classes and functions that can be used to process input, manage hardware devices, and interact with system software.

What are the testing Frameworks available in Java?
Answer:JUnit. JUnit is one of the popular Java unit testing frameworks. ...
JBehave. JBehave is also one of the best Java Testing Frameworks, primarily used with Selenium WebDriver for Java testing. ...
Serenity. ...
Selenium. ...
TestNG. ...
Mockito. ...
HTTPUnit. ...
Gauge

What are jUnit and testNG?
Answer: JUnit is an open-source framework used to trigger and write tests. TestNG is a Java-based framework that is an upgraded option for running tests. Parallel test Runs. JUnit does not support to run parallel tests. TestNG can run parallel tests.

What are the dependencies for this project?
Answer: 
Dependency is a feature in TestNG that allows a test method to depend on a single or a group of test methods. This will help in executing a set of tests to be executed before a test method.

What is dependency injection in Java?
Answer: In object-oriented programming, a class may rely on objects of other classes. A dependency injection is a strategy that is used to separate the creation of dependency objects from the class that needs them.

Explain what static binding and dynamic binding is?
Answer: Static binding is a binding in which name can be associated with the class during compilation time , and it is also called as early Binding. Dynamic binding is a binding in which name can be associated with the class during execution time , and it is also called as Late Binding.